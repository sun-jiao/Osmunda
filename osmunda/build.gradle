apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'

group='moe.sunjiao'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 4
        versionName "1.3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'

    implementation 'org.ogce:xpp3:1.1.6'

    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-cli:commons-cli:1.3'
    implementation 'org.apache.commons:commons-lang3:3.6'

    implementation 'org.apache.commons:commons-compress:1.18'
    testImplementation 'junit:junit:4.12'

    //api 'org.openstreetmap.osmosis:osmosis-core:0.47.3'
    //api 'org.openstreetmap.osmosis:osmosis-pbf:0.47.3'
    //api 'org.openstreetmap.osmosis:osmosis-osm-binary:0.47.3'
    //api 'org.openstreetmap.osmosis:osmosis-xml:0.47.3'
    api 'com.github.sun-jiao.osmosis:osmosis-core:-SNAPSHOT'
    api 'com.github.sun-jiao.osmosis:osmosis-pbf:-SNAPSHOT'
    api 'com.github.sun-jiao.osmosis:osmosis-osm-binary:-SNAPSHOT'
    api 'com.github.sun-jiao.osmosis:osmosis-xml:-SNAPSHOT'

    implementation 'org.osmdroid:osmdroid-android:6.1.6'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}